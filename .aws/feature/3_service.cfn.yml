AWSTemplateFormatVersion: 2010-09-09
Description: Web Client Feature Service - Deploys Web Code to ECS per git branch
Parameters:
  IamStack:
    Type: String
    Description: "Stack name used to create IAM roles"

  ALBStack:
    Type: String
    Description: "Stack name used to create the ALB"

  RepositoryName:
    Type: String
    Default: webclient-feature

  FormattedBranchName:
    Type: String
    Description: The branch name to use

  GitSHA:
    Type: String
    Description: The sha to use
    Default: latest

  DomainBase:
    Type: String
    Description: The base host name to use.

  PrivateSubnets:
    Type: "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>"
    Default: /Shared/PrivateSubnets

  PublicSubnets:
    Type: "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>"
    Default: /Shared/PublicSubnets

  Vpc:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>"
    Default: /Shared/Vpc

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/webclient/feature/${FormattedBranchName}"
      RetentionInDays: 14

  AllocateAlbRulePriorityCustomResource:
    Type: Custom::AllocateAlbRulePriority
    Properties:
      ServiceToken:
        Fn::ImportValue: !Sub "${ALBStack}-AlbListenerPriorityFunction"

  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      VpcId: !Ref Vpc
      Protocol: HTTP
      Port: 80
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 0

  ListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      Conditions:
        - Field: host-header
          Values:
            - !Sub "${FormattedBranchName}.${DomainBase}"
      ListenerArn:
        Fn::ImportValue: !Sub "${ALBStack}-ListenerARN"
      Priority: !GetAtt AllocateAlbRulePriorityCustomResource.Priority
    DependsOn:
      - TargetGroup
      - AllocateAlbRulePriorityCustomResource

  EcsService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: !Ref FormattedBranchName
      Cluster:
        Fn::ImportValue: !Sub "${ALBStack}-EcsClusterArn"
      LaunchType: FARGATE
      DesiredCount: 1
      LoadBalancers:
        - ContainerPort: 80
          ContainerName: apache
          TargetGroupArn: !Ref "TargetGroup"
      TaskDefinition: !Ref "EcsTaskDefinition"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::ImportValue: !Sub "${ALBStack}-SecurityGroupArn"
          Subnets: !Ref PrivateSubnets
    DependsOn:
      - TargetGroup
      - ListenerRule

  EcsTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Sub "webclient-feature-${FormattedBranchName}"
      TaskRoleArn:
        Fn::ImportValue: !Sub "${IamStack}-TaskRoleArn"
      ExecutionRoleArn:
        Fn::ImportValue: !Sub "${IamStack}-TaskExecutionRoleArn"
      Cpu: 256
      Memory: 1GB
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: apache
          Environment:
            - Name: SHOW_DEV
              Value: included
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${RepositoryName}:${GitSHA}"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub "/webclient/feature/${FormattedBranchName}"
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs
          PortMappings:
            - Protocol: tcp
              ContainerPort: 80
