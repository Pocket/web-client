AWSTemplateFormatVersion: 2010-09-09
Description: WebClient Deployments

Parameters:
  LogStorageS3Bucket:
    Type: String
    Default: ""

Conditions:
  CreateLogS3Policy: !Not [!Equals [!Ref LogStorageS3Bucket, ""]]

Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebClientTaskRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: WebClientMetricTaskPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebClientTaskExecutionRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  AllocateAlbRulePriorityCustomResourceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: DescribeRulesPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DescribeRules
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LogStorageS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: CreateLogS3Policy
    Properties:
      Bucket: !Ref LogStorageS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - s3:GetBucketAcl
            Resource: !Sub "arn:aws:s3:::${LogStorageS3Bucket}"
          - Effect: Allow
            Principal:
              Service:
                - !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - s3:PutObject
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
            Resource: !Sub "arn:aws:s3:::${LogStorageS3Bucket}/*"

  ServiceAutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "WebClientAutoScaleRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: "WebClientAutoscaling"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - application-autoscaling:*
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - ecs:DescribeServices
                  - ecs:UpdateService
                Resource: "*"

Outputs:
  TaskRoleArn:
    Value: !GetAtt TaskRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-TaskRoleArn"
  TaskExecutionRoleArn:
    Value: !GetAtt TaskExecutionRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-TaskExecutionRoleArn"
  ServiceAutoScalingRole:
    Value: !GetAtt ServiceAutoScalingRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ServiceAutoScalingRoleArn"
  AllocateAlbRulePriorityCustomResourceLambdaRole:
    Value: !GetAtt AllocateAlbRulePriorityCustomResourceLambdaRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-AllocateAlbRulePriorityCustomResourceLambdaRole"
